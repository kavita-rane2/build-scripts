diff --git a/Makefile b/Makefile
index c70b9f799..8e19f8f35 100644
--- a/Makefile
+++ b/Makefile
@@ -125,8 +125,7 @@ install-dev-rocks: build-venv
 dev: install-rust-toolchain build-venv install-dev-rocks bin/grpcurl bin/h2client wasm-test-filters
 
 build-release: check-bazel
-	$(BAZEL) clean --expunge
-	$(BAZEL) build //build:kong --verbose_failures --config release
+	$(BAZEL) build //build:kong --verbose_failures	--//:wasmx=false --config release
 
 package/deb: check-bazel build-release
 	$(BAZEL) build --config release :kong_deb
@@ -134,7 +133,7 @@ package/deb: check-bazel build-release
 package/rpm: check-bazel build-release
 	$(BAZEL) build --config release :kong_el8 --action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE
 	$(BAZEL) build --config release :kong_aws2	--action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE
-	$(BAZEL) build --config release :kong_aws2022 --action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE
+        $(BAZEL) build --config release :kong_aws2023 --action_env=RPM_SIGNING_KEY_FILE --action_env=NFPM_RPM_PASSPHRASE
 
 functional-tests: dev test
 
diff --git a/build/build_system.bzl b/build/build_system.bzl
index bfd45d067..902d96165 100644
--- a/build/build_system.bzl
+++ b/build/build_system.bzl
@@ -186,7 +186,9 @@ def _github_release_impl(ctx):
         os_arch = "arm64"
     elif os_arch == "x86_64":
         os_arch = "amd64"
-    elif os_arch != "amd64":
+    elif os_arch == "ppc64le":
+        os_arch = "ppc64le"
+    elif os_arch != "amd64" or os_arch != "ppc64le":
         fail("Unsupported arch %s" % os_arch)
 
     if os_name == "mac os x":
diff --git a/build/kong_crate/deps.bzl b/build/kong_crate/deps.bzl
index 9a11babf4..94932b5d8 100644
--- a/build/kong_crate/deps.bzl
+++ b/build/kong_crate/deps.bzl
@@ -14,6 +14,12 @@ def kong_crate_repositories(cargo_home_isolated = True):
         Cargo home, which takes about 2 minutes to bootstrap.
     """
 
+    rust_repository_set(
+        name = "rust_linux_powerpc64le",
+        exec_triple = "powerpc64le-unknown-linux-gnu",
+        versions = ["1.82.0"],
+    )
+
     rules_rust_dependencies()
 
     # To get the sha256s, please check out the
diff --git a/build/nfpm/repositories.bzl b/build/nfpm/repositories.bzl
index c92cc9de0..317aa7cf6 100644
--- a/build/nfpm/repositories.bzl
+++ b/build/nfpm/repositories.bzl
@@ -15,6 +15,8 @@ def _nfpm_release_select_impl(ctx):
         os_arch = "arm64"
     elif os_arch == "amd64":
         os_arch = "x86_64"
+    elif os_arch == "ppc64le":
+        os_arch = "ppc64le"
     else:
         fail("Unsupported arch %s" % os_arch)
 
@@ -38,6 +40,7 @@ def nfpm_repositories():
     npfm_matrix = [
         ["linux", "x86_64", "3e1fe85c9a224a221c64cf72fc19e7cd6a0a51a5c4f4b336e3b8eccd417116a3"],
         ["linux", "arm64", "df8f272195b7ddb09af9575673a9b8111f9eb7529cdd0a3fac4d44b52513a1e1"],
+        ["linux", "ppc64le", "369a5db5ecdad8d42f7b152bdac1eb54f17075a2601325988d580c717a5134e4"],
         ["Darwin", "x86_64", "0213fa5d5af6f209d953c963103f9b6aec8a0e89d4bf0ab3d531f5f8b20b8eeb"],
         ["Darwin", "arm64", "5162ce5a59fe8d3b511583cb604c34d08bd2bcced87d9159c7005fc35287b9cd"],
     ]
diff --git a/build/nfpm/rules.bzl b/build/nfpm/rules.bzl
index 96d835928..2de651f4a 100644
--- a/build/nfpm/rules.bzl
+++ b/build/nfpm/rules.bzl
@@ -13,6 +13,8 @@ def _nfpm_pkg_impl(ctx):
         target_arch = "amd64"
     elif target_cpu == "aarch64" or target_cpu == "arm64":
         target_arch = "arm64"
+    if target_cpu == "ppc" or target_cpu == "ppc64le":
+        target_arch = "ppc64le"
     else:
         fail("Unsupported platform cpu: %s" % target_cpu)
     env["ARCH"] = target_arch
@@ -22,7 +24,7 @@ def _nfpm_pkg_impl(ctx):
 
     pkg_ext = ctx.attr.packager
 
-    # create like kong.amd64.deb
+    # create like kong.<target_arch>.deb
     out = ctx.actions.declare_file("%s/%s.%s.%s" % (
         ctx.attr.out_dir,
         ctx.attr.pkg_name,
diff --git a/build/openresty/BUILD.openresty.bazel b/build/openresty/BUILD.openresty.bazel
index 81ad1724f..f17cab988 100644
--- a/build/openresty/BUILD.openresty.bazel
+++ b/build/openresty/BUILD.openresty.bazel
@@ -101,6 +101,7 @@ make(
         "-j" + KONG_VAR["NPROC"],
         "install",
     ],
+    postfix_script = "make clean; ASFLAGS= make all PREFIX=$INSTALLDIR; ASFLAGS= make install PREFIX=$INSTALLDIR",
     visibility = ["//visibility:public"],
 )
 
diff --git a/build/openresty/atc_router/BUILD.atc_router.bazel b/build/openresty/atc_router/BUILD.atc_router.bazel
index bd87dfccd..0d4ff23ba 100644
--- a/build/openresty/atc_router/BUILD.atc_router.bazel
+++ b/build/openresty/atc_router/BUILD.atc_router.bazel
@@ -19,6 +19,7 @@ filegroup(
 
 rust_shared_library(
     name = "atc_router",
+    edition = "2021",
     srcs = [":rust_srcs"],
     aliases = aliases(),
     crate_features = [
diff --git a/build/repositories.bzl b/build/repositories.bzl
index 4004b32f7..33e5eeb58 100644
--- a/build/repositories.bzl
+++ b/build/repositories.bzl
@@ -37,14 +37,15 @@ def github_cli_repositories():
     gh_matrix = [
         ["linux", "amd64", "tar.gz", "7f9795b3ce99351a1bfc6ea3b09b7363cb1eccca19978a046bcb477839efab82"],
         ["linux", "arm64", "tar.gz", "115e1a18695fcc2e060711207f0c297f1cca8b76dd1d9cd0cf071f69ccac7422"],
+        ["linux", "ppc64le", "tar.gz", "115e1a18695fcc2e060711207f0c297f1cca8b76dd1d9cd0cf071f69ccac7422"],
         ["macOS", "amd64", "zip", "d18acd3874c9b914e0631c308f8e2609bd45456272bacfa70221c46c76c635f6"],
         ["macOS", "arm64", "zip", "85fced36325e212410d0eea97970251852b317d49d6d72fd6156e522f2896bc5"],
     ]
     for name, arch, type, sha in gh_matrix:
         http_archive(
             name = "gh_%s_%s" % (name, arch),
-            url = "https://github.com/cli/cli/releases/download/v2.50.0/gh_2.50.0_%s_%s.%s" % (name, arch, type),
-            strip_prefix = "gh_2.50.0_%s_%s" % (name, arch),
+            url = "https://github.com/cli/cli/releases/download/v2.50.0/gh_2.50.0_%s_arm64.%s" % (name, type),
+            strip_prefix = "gh_2.50.0_%s_arm64" % (name),
             sha256 = sha,
             build_file_content = _SRCS_BUILD_FILE_CONTENT,
         )
diff --git a/crate_locks/atc_router.lock b/crate_locks/atc_router.lock
index 9c41fe7d8..3609488de 100644
--- a/crate_locks/atc_router.lock
+++ b/crate_locks/atc_router.lock
@@ -1,5 +1,5 @@
 {
-  "checksum": "a9a20974f77d4fa9001e79b35a202afc62efc5de414664912c347ea3475fe888",
+  "checksum": "0dd0a1c11eda3b53b27154490731992a54144170630dab5176f53ada7f0e28eb",
   "crates": {
     "aho-corasick 1.1.3": {
       "name": "aho-corasick",
@@ -655,13 +655,6 @@
         "compile_data_glob": [
           "**"
         ],
-        "crate_features": {
-          "common": [
-            "default",
-            "std"
-          ],
-          "selects": {}
-        },
         "deps": {
           "common": [
             {
diff --git a/kong/pdk/nginx.lua b/kong/pdk/nginx.lua
index f5715e03e..7d1daa479 100644
--- a/kong/pdk/nginx.lua
+++ b/kong/pdk/nginx.lua
@@ -12,7 +12,7 @@ local arch = ffi.arch
 local ngx  = ngx
 local tonumber = tonumber
 
-if arch == "x64" or arch == "arm64" then
+if arch == "x64" or arch == "ppc64le" or arch == "arm64" then
   ffi.cdef[[
     uint64_t *ngx_stat_active;
     uint64_t *ngx_stat_reading;
